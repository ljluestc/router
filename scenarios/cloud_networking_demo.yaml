# Cloud Networking Demo Scenario
# This scenario demonstrates multi-cloud networking concepts similar to CloudPods and Aviatrix

name: "Cloud Networking Demo"
description: "Comprehensive cloud networking simulation with multi-protocol routing, traffic shaping, and network impairments"
version: "1.0.0"

# Global Configuration
global:
  router_id: "1.1.1.1"
  as_number: 65001
  log_level: "info"
  enable_monitoring: true
  enable_analytics: true

# Network Interfaces
interfaces:
  - name: "eth0"
    type: "ethernet"
    ip_address: "192.168.1.1/24"
    status: "up"
    description: "Management interface"
    
  - name: "eth1"
    type: "ethernet"
    ip_address: "10.0.1.1/24"
    status: "up"
    description: "Data plane interface"
    
  - name: "eth2"
    type: "ethernet"
    ip_address: "172.16.1.1/24"
    status: "up"
    description: "Cloud interconnect"

# Routing Protocols
protocols:
  bgp:
    enabled: true
    as_number: 65001
    router_id: "1.1.1.1"
    neighbors:
      - address: "192.168.1.2"
        remote_as: 65002
        description: "AWS VPC Router"
        hold_time: 180
        keepalive: 60
      - address: "10.0.1.2"
        remote_as: 65003
        description: "Azure VNet Router"
        hold_time: 180
        keepalive: 60
      - address: "172.16.1.2"
        remote_as: 65004
        description: "GCP VPC Router"
        hold_time: 180
        keepalive: 60
    
    routes:
      - destination: "10.0.0.0/8"
        next_hop: "192.168.1.2"
        local_preference: 100
        community: "65001:100"
      - destination: "172.16.0.0/12"
        next_hop: "10.0.1.2"
        local_preference: 200
        community: "65001:200"
      - destination: "192.168.0.0/16"
        next_hop: "172.16.1.2"
        local_preference: 300
        community: "65001:300"

  ospf:
    enabled: true
    router_id: "1.1.1.1"
    area: "0.0.0.0"
    interfaces:
      - name: "eth0"
        cost: 10
        hello_interval: 10
        dead_interval: 40
      - name: "eth1"
        cost: 20
        hello_interval: 10
        dead_interval: 40

  isis:
    enabled: true
    system_id: "0000.0000.0001"
    area_id: "49.0001"
    net_id: "49.0001.0000.0000.0001.00"
    level: "level-2"
    interfaces:
      - name: "eth2"
        metric: 10
        level: "level-2"

# Traffic Shaping Configuration
traffic_shaping:
  enabled: true
  shapers:
    - name: "cloud_traffic"
      type: "wfq"
      total_bandwidth: "10000000000"  # 10 Gbps
      classes:
        - class_id: 1
          name: "critical"
          priority: "critical"
          bandwidth: "4000000000"  # 4 Gbps
          weight: 4.0
        - class_id: 2
          name: "high"
          priority: "high"
          bandwidth: "3000000000"  # 3 Gbps
          weight: 3.0
        - class_id: 3
          name: "normal"
          priority: "normal"
          bandwidth: "2000000000"  # 2 Gbps
          weight: 2.0
        - class_id: 4
          name: "low"
          priority: "low"
          bandwidth: "1000000000"  # 1 Gbps
          weight: 1.0
    
    - name: "inter_cloud"
      type: "token_bucket"
      rate: "1000000000"  # 1 Gbps
      burst_size: "10000000"  # 10 MB

# Network Impairments
impairments:
  enabled: true
  interfaces:
    - name: "eth0"
      impairments:
        - type: "delay"
          value: 50.0  # 50ms
          variation: 10.0  # 10ms jitter
          enabled: true
        - type: "loss"
          value: 0.1  # 0.1% packet loss
          correlation: 25
          enabled: true
    
    - name: "eth1"
      impairments:
        - type: "delay"
          value: 100.0  # 100ms
          variation: 20.0  # 20ms jitter
          enabled: true
        - type: "bandwidth_limit"
          value: "500000000"  # 500 Mbps
          enabled: true
    
    - name: "eth2"
      impairments:
        - type: "delay"
          value: 200.0  # 200ms (satellite-like)
          variation: 50.0  # 50ms jitter
          enabled: true
        - type: "loss"
          value: 1.0  # 1% packet loss
          correlation: 30
          enabled: true
        - type: "reordering"
          value: 5.0  # 5% reordering
          enabled: true

# Cloud Provider Simulation
cloud_providers:
  aws:
    enabled: true
    region: "us-west-2"
    vpc_id: "vpc-12345678"
    subnets:
      - cidr: "10.0.0.0/16"
        availability_zone: "us-west-2a"
      - cidr: "10.1.0.0/16"
        availability_zone: "us-west-2b"
    nat_gateway:
      enabled: true
      public_ip: "54.123.45.67"
    load_balancer:
      enabled: true
      type: "application"
      listeners:
        - port: 80
          protocol: "HTTP"
        - port: 443
          protocol: "HTTPS"

  azure:
    enabled: true
    region: "West US 2"
    resource_group: "rg-cloudpods"
    virtual_network:
      name: "vnet-cloudpods"
      address_space: "172.16.0.0/16"
    subnets:
      - name: "subnet-frontend"
        address_prefix: "172.16.1.0/24"
      - name: "subnet-backend"
        address_prefix: "172.16.2.0/24"
    load_balancer:
      enabled: true
      sku: "Standard"
      frontend_ips:
        - name: "frontend-ip"
          public_ip: "20.123.45.67"

  gcp:
    enabled: true
    region: "us-west1"
    project_id: "cloudpods-demo"
    vpc_network:
      name: "vpc-cloudpods"
      auto_create_subnetworks: false
    subnets:
      - name: "subnet-cloudpods"
        ip_cidr_range: "192.168.0.0/16"
        region: "us-west1"
    load_balancer:
      enabled: true
      type: "HTTP(S)"
      backend_services:
        - name: "backend-service"
          protocol: "HTTP"
          port: 80

# Service Mesh Configuration
service_mesh:
  enabled: true
  type: "istio"
  version: "1.15.0"
  namespaces:
    - name: "frontend"
      services:
        - name: "web-app"
          port: 8080
          protocol: "HTTP"
    - name: "backend"
      services:
        - name: "api-server"
          port: 9090
          protocol: "HTTP"
        - name: "database"
          port: 5432
          protocol: "TCP"
  
  traffic_policies:
    - name: "frontend-to-backend"
      source: "frontend/web-app"
      destination: "backend/api-server"
      rules:
        - match:
            headers:
              user-agent: "mobile"
          route:
            - destination: "backend/api-server"
              weight: 100
        - match:
            headers:
              user-agent: "desktop"
          route:
            - destination: "backend/api-server"
              weight: 100

# Monitoring and Analytics
monitoring:
  enabled: true
  metrics:
    - name: "packet_count"
      type: "counter"
      labels: ["interface", "protocol"]
    - name: "latency"
      type: "histogram"
      labels: ["source", "destination"]
    - name: "throughput"
      type: "gauge"
      labels: ["interface"]
  
  dashboards:
    - name: "overview"
      panels:
        - title: "Packet Rate"
          type: "graph"
          query: "rate(packet_count[5m])"
        - title: "Latency Distribution"
          type: "histogram"
          query: "histogram_quantile(0.95, latency)"
        - title: "Interface Utilization"
          type: "gauge"
          query: "throughput / 1000000000"

# Test Scenarios
test_scenarios:
  - name: "bgp_convergence"
    description: "Test BGP route convergence time"
    duration: "60s"
    expected_convergence_time: "30s"
    
  - name: "traffic_shaping"
    description: "Test traffic shaping effectiveness"
    duration: "120s"
    traffic_patterns:
      - type: "burst"
        duration: "10s"
        rate: "2000000000"  # 2 Gbps
      - type: "sustained"
        duration: "60s"
        rate: "1000000000"  # 1 Gbps
    
  - name: "network_impairments"
    description: "Test network impairment simulation"
    duration: "180s"
    impairments:
      - type: "delay"
        value: 100.0
      - type: "loss"
        value: 1.0
      - type: "jitter"
        value: 20.0

# Performance Benchmarks
benchmarks:
  - name: "routing_performance"
    description: "Measure routing table lookup performance"
    iterations: 1000000
    expected_ops_per_second: 1000000
    
  - name: "traffic_shaping_performance"
    description: "Measure traffic shaping throughput"
    duration: "60s"
    expected_throughput: "10000000000"  # 10 Gbps
    
  - name: "protocol_convergence"
    description: "Measure protocol convergence time"
    scenarios:
      - protocol: "bgp"
        expected_time: "30s"
      - protocol: "ospf"
        expected_time: "40s"
      - protocol: "isis"
        expected_time: "50s"
