# Router Simulator Configuration
# Multi-cloud networking platform with CloudPods and Aviatrix integration

api:
  port: 8080
  host: "0.0.0.0"
  read_timeout: "30s"
  write_timeout: "30s"
  idle_timeout: "120s"
  cors:
    enabled: true
    allow_origins: ["*"]
    allow_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    allow_headers: ["*"]

log:
  level: "info"
  json: false
  file: ""

cloudpods:
  endpoint: "https://localhost:8080"
  username: "admin"
  password: ""
  region: "default"
  project: "default"
  verify_ssl: true
  timeout: "30s"
  headers: {}
  retry_count: 3
  retry_delay: "5s"

aviatrix:
  controller_ip: "localhost"
  username: "admin"
  password: ""
  api_version: "v1"
  verify_ssl: true
  timeout: "30s"
  region: "us-west-1"
  retry_count: 3
  retry_delay: "5s"

router:
  interfaces:
    - name: "eth0"
      type: "ethernet"
      ip: "192.168.1.1"
      subnet: "192.168.1.0/24"
      gateway: "192.168.1.1"
      mtu: 1500
      enabled: true
      description: "Primary interface"
    - name: "eth1"
      type: "ethernet"
      ip: "10.0.0.1"
      subnet: "10.0.0.0/24"
      gateway: "10.0.0.1"
      mtu: 1500
      enabled: true
      description: "Secondary interface"

  protocols:
    bgp:
      enabled: true
      asn: 65001
      router_id: "192.168.1.1"
      neighbors:
        - ip: "192.168.1.2"
          asn: 65002
          password: ""
          description: "BGP neighbor 1"
          enabled: true
        - ip: "10.0.0.2"
          asn: 65003
          password: ""
          description: "BGP neighbor 2"
          enabled: true
      policies:
        - name: "export-policy"
          type: "export"
          match: ["192.168.1.0/24"]
          action: "permit"
          set: ["community:65001:100"]
          description: "Export local routes"
        - name: "import-policy"
          type: "import"
          match: ["0.0.0.0/0"]
          action: "permit"
          set: []
          description: "Import all routes"
      communities:
        "65001:100": "local"
        "65001:200": "customer"

    ospf:
      enabled: true
      router_id: "192.168.1.1"
      areas:
        - id: 0
          type: "normal"
          stub: false
          nssa: false
          summary: true
        - id: 1
          type: "stub"
          stub: true
          nssa: false
          summary: false
      interfaces:
        - name: "eth0"
          area: 0
          cost: 10
          priority: 1
          enabled: true
        - name: "eth1"
          area: 1
          cost: 20
          priority: 1
          enabled: true
      redistribute: ["connected", "static"]

    isis:
      enabled: false
      system_id: "1921.6801.0001"
      level: 2
      interfaces:
        - name: "eth0"
          level: 2
          cost: 10
          enabled: true
      redistribute: ["connected", "static"]

  traffic_shaping:
    enabled: true
    algorithms:
      - name: "token-bucket"
        type: "token_bucket"
        parameters:
          rate: 1000000  # 1 Mbps
          burst: 100000  # 100 KB
        enabled: true
      - name: "wfq"
        type: "weighted_fair_queuing"
        parameters:
          queues: 8
          weights: [1, 2, 4, 8, 16, 32, 64, 128]
        enabled: true
    policies:
      - name: "high-priority"
        match: ["dscp:46", "dscp:34"]
        action: "queue:7"
        rate: 1000000
        burst: 100000
        priority: 1
        description: "High priority traffic"
      - name: "low-priority"
        match: ["dscp:0"]
        action: "queue:0"
        rate: 100000
        burst: 10000
        priority: 8
        description: "Low priority traffic"
    global_limit: 10000000  # 10 Mbps

  impairments:
    enabled: true
    algorithms:
      - name: "delay"
        type: "delay"
        parameters:
          delay: "100ms"
          jitter: "10ms"
        enabled: true
      - name: "loss"
        type: "loss"
        parameters:
          loss: 0.01  # 1%
        enabled: true
      - name: "duplicate"
        type: "duplicate"
        parameters:
          duplicate: 0.001  # 0.1%
        enabled: true
      - name: "reorder"
        type: "reorder"
        parameters:
          reorder: 0.01  # 1%
          gap: 1
        enabled: true
    policies:
      - name: "simulate-wan"
        match: ["dst:10.0.0.0/8"]
        algorithm: "delay"
        parameters:
          delay: "50ms"
          jitter: "5ms"
        enabled: true
        description: "Simulate WAN delay"
      - name: "simulate-loss"
        match: ["dst:192.168.0.0/16"]
        algorithm: "loss"
        parameters:
          loss: 0.005  # 0.5%
        enabled: true
        description: "Simulate packet loss"

monitoring:
  enabled: true
  prometheus:
    enabled: true
    port: 9090
    path: "/metrics"
  metrics:
    interval: "30s"
    retention: "24h"
    exporters: ["prometheus", "influxdb"]
    collectors: ["cpu", "memory", "network", "routing"]
  logging:
    level: "info"
    format: "json"
    outputs: ["console", "file"]
    rotation: "24h"
    max_size: 100000000  # 100 MB
    max_backups: 5
    max_age: 30
  alerting:
    enabled: true
    rules:
      - name: "high_cpu_usage"
        condition: "cpu_usage > 80"
        severity: "warning"
        message: "High CPU usage detected"
        labels:
          service: "router"
        annotations:
          summary: "CPU usage is above 80%"
      - name: "packet_loss"
        condition: "packet_loss_rate > 0.01"
        severity: "critical"
        message: "High packet loss detected"
        labels:
          service: "router"
        annotations:
          summary: "Packet loss rate is above 1%"
    receivers: ["webhook", "email"]
    webhooks: ["https://hooks.slack.com/services/xxx"]

kubernetes:
  enabled: false
  config_path: ""
  namespace: "default"
  in_cluster: false
