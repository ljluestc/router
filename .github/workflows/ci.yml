name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-cpp:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [gcc-10, gcc-11, gcc-12, clang-12, clang-13, clang-14]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libpcap-dev libfrr-dev
        sudo apt-get install -y ${{ matrix.compiler }}
    
    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}
    
    - name: Build
      run: |
        cd build
        make -j$(nproc)
    
    - name: Test
      run: |
        cd build
        ./routersim_tests

  build-rust:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: rustfmt, clippy
    
    - name: Install ClickHouse
      run: |
        sudo apt-get update
        sudo apt-get install -y apt-transport-https ca-certificates dirmngr
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 8919F6BD2B48D754
        echo "deb https://packages.clickhouse.com/deb stable main" | sudo tee /etc/apt/sources.list.d/clickhouse.list
        sudo apt-get update
        sudo apt-get install -y clickhouse-server clickhouse-client
    
    - name: Start ClickHouse
      run: |
        sudo service clickhouse-server start
        sleep 10
    
    - name: Cargo check
      run: |
        cd rust
        cargo check
    
    - name: Cargo test
      run: |
        cd rust
        cargo test
    
    - name: Cargo clippy
      run: |
        cd rust
        cargo clippy -- -D warnings

  build-go:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.21'
    
    - name: Go mod download
      run: |
        cd go
        go mod download
    
    - name: Go build
      run: |
        cd go
        go build ./cmd/cloudnet
    
    - name: Go test
      run: |
        cd go
        go test ./...

  integration-tests:
    runs-on: ubuntu-latest
    needs: [build-cpp, build-rust, build-go]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libpcap-dev libfrr-dev
        sudo apt-get install -y clickhouse-server clickhouse-client
        sudo apt-get install -y golang-go
    
    - name: Start ClickHouse
      run: |
        sudo service clickhouse-server start
        sleep 10
    
    - name: Build all components
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        make -j$(nproc)
        
        cd ../rust
        cargo build --release
        
        cd ../go
        go build -o cloudnet ./cmd/cloudnet
    
    - name: Run integration tests
      run: |
        cd build
        ./routersim_tests --gtest_filter="*Integration*"

  performance-tests:
    runs-on: ubuntu-latest
    needs: [build-cpp]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libpcap-dev libfrr-dev
    
    - name: Build
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        make -j$(nproc)
    
    - name: Run performance tests
      run: |
        cd build
        ./routersim_tests --benchmark

  deploy-docs:
    runs-on: ubuntu-latest
    needs: [build-cpp, build-rust, build-go]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs
