version: '3.8'

services:
  # Go API Server
  api-server:
    build: .
    ports:
      - "8080:8080"
    environment:
      - CLOUDPODS_ENDPOINT=${CLOUDPODS_ENDPOINT:-https://api.cloudpods.org}
      - CLOUDPODS_USERNAME=${CLOUDPODS_USERNAME:-admin}
      - CLOUDPODS_PASSWORD=${CLOUDPODS_PASSWORD:-password}
      - AVIATRIX_ENDPOINT=${AVIATRIX_ENDPOINT:-https://api.aviatrix.com}
      - AVIATRIX_USERNAME=${AVIATRIX_USERNAME:-admin}
      - AVIATRIX_PASSWORD=${AVIATRIX_PASSWORD:-password}
    volumes:
      - ./config:/app/config
      - ./scenarios:/app/scenarios
    depends_on:
      - clickhouse
      - prometheus
    networks:
      - router-network

  # ClickHouse for analytics
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    ports:
      - "9000:9000"
      - "8123:8123"
    environment:
      - CLICKHOUSE_DB=router_analytics
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    networks:
      - router-network

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - router-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - router-network

  # Web UI (development)
  web-ui:
    build:
      context: ./web
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080
    volumes:
      - ./web:/app
      - /app/node_modules
    depends_on:
      - api-server
    networks:
      - router-network

  # Router Core (C++)
  router-core:
    build: .
    command: ["./router_sim", "--config", "/app/config/router.yaml"]
    volumes:
      - ./config:/app/config
      - ./scenarios:/app/scenarios
    depends_on:
      - api-server
    networks:
      - router-network
    privileged: true  # Required for network operations

  # Rust Analytics Engine
  analytics-engine:
    build:
      context: ./rust
      dockerfile: Dockerfile
    environment:
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=9000
      - CLICKHOUSE_DATABASE=router_analytics
    depends_on:
      - clickhouse
    networks:
      - router-network

volumes:
  clickhouse_data:
  prometheus_data:
  grafana_data:

networks:
  router-network:
    driver: bridge
